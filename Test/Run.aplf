 {ok}←Run test_filter;all;aplv;cancrawl;canwatch;core;dnv;folder;interval;notused;ok;oktxt;olddebug;opts;rep;showmsg;slow;test;tests;time;udebug;z;CITA;CITA_LOG;⎕TRAP;extn;isassert;file
    ⍝ Do (⎕SE.Link.Test.Run'all') to run ALL the Link Tests, including slow ones
    ⍝ Do (⎕SE.Link.Test.Run'') to run the basic Link Tests

 :If 2401⌶0
     ⎕←'Expose root properties was set'
 :EndIf

 :If CITA←0≠≢CITA_LOG←2 ⎕NQ '.' 'GetEnvironment' 'CITA_LOG'
     :If ∨/'yY1'∊2 ⎕NQ '.' 'GetEnvironment' 'DEBUG_LINKQA'
         ⎕TRAP←0 'S'
     :Else
         ⎕TRAP←0 'C' '→ERROR'
     :EndIf
 :EndIf

 :If 0=⎕NC'NAME'
     InitGlobals''
 :EndIf

 :If ⎕SE.Link.NOTIFY≢0
     ⎕SE.Link.NOTIFY←0
     ⎕←'NB: NOTIFY set to 0'
 :EndIf
 :If (~0∊⍴test_filter)∧(⍬≡0⍴test_filter)  ⍝ right arg prepended with a number
     rep←⊃test_filter ⋄ test_filter↓⍨←1
 :Else ⋄ rep←1
 :EndIf
 test_filter←,⊆,test_filter
 tests←{((5↑¨⍵)∊⊂'test_')⌿⍵}'t'⎕NL ¯3 ⍝ ALL tests
 slow←'test_threads' 'test_watcherror'  ⍝ slow tests
 :If all←(⊂'all')∊test_filter  ⍝ all tests - nothing to do
 :ElseIf (0∊⍴test_filter)∨(0=≢⊃test_filter) ⋄ tests~←slow  ⍝ basic tests
     Log'Not running slow tests:',(⍕slow),' - use (',(⊃⎕XSI),'& ''all'') to run all tests'  ⍝ remove slow tests
 :Else ⋄ tests/⍨←∨⌿1∊¨(test_filter)∘.⍷tests  ⍝ selected tests
 :EndIf
 tests←⊃,/rep⍴⊂tests    ⍝ repeat tests if requested
      ⍝ check file system
 :If 0=≢folder←Setup FOLDER NAME
     :Return
 :EndIf
      ⍝ set up watcher/crawler
 (canwatch cancrawl interval)←⎕SE.Link.Watcher.(DOTNET CRAWLER INTERVAL)
 :If ~USE_MOCK_FSW∨canwatch∨cancrawl
     Log'Set USE_MOCK_FSW - no FileSystemWatcher or Crawler available'
     :Return
 :EndIf
      ⍝:If (canwatch⍲cancrawl)
      ⍝    notused←∊(~canwatch cancrawl)/'FileSystemWatcher' 'Crawler'
      ⍝    Log'Not running tests with ',notused,' - use (',(⊃⎕XSI),'& ''all'') to run all tests'
      ⍝:EndIf
 :If ~⎕SE.Link.U.IS181 ⋄ Log'Not running Dyalog v18.1 or later - some tests will be skipped' ⋄ :EndIf
      ⍝:If all ⋄ canwatch←cancrawl←1  ⍝ all : do both
      ⍝:ElseIf canwatch ⋄ cancrawl←0  ⍝ do FileSystemWatcher if present
      ⍝:ElseIf cancrawl ⋄ canwatch←0  ⍝ do Crawler if no FileSystemWatcher
      ⍝:EndIf
 :If cancrawl∧⎕TID=0
     Log(⊃⎕XSI),'&',(⍕''''{⍺,((1+⍵=⍺)/⍵),⍺}¨⊆test_filter),'   ⍝ Crawler QA''s must be run in a non-zero thread'
     :Return
 :EndIf
      ⍝ touch ⎕SE.Link settings
 :If 0=⎕NC'⎕SE.Link.DEBUG' ⋄ ⎕SE.Link.DEBUG←0 ⋄ :EndIf
 :If 0=⎕NC'debug' ⋄ debug←⎕SE.Link.DEBUG ⋄ :EndIf
 (⎕SE.Link.DEBUG olddebug)←(debug ⎕SE.Link.DEBUG)
 udebug←4↓,⎕SE.UCMD']udebug ','off' 'on'⊃⍨1+×debug
 (showmsg ⎕SE.Link.U.SHOWMSG)←(⎕SE.Link.U.SHOWMSG)(×debug)  ⍝ do not show messages if not debugging
 ⎕SE.Link.Watcher.INTERVAL←0.1 1⊃⍨1+(×debug)∧⎕SE.Link.Watcher.LOGCRAWLER  ⍝ force watching a lot - can't go below 100ms because windows may have granularity of 20ms
      ⍝ run tests
 time←⎕AI[3] ⋄ ok←1
 :If ~×debug ⋄ Log'Running:',⍕tests ⋄ :EndIf
 :For test :In tests
     :If ×debug ⋄ Log'Running: ',test ⋄ :EndIf
     :If canwatch ⍝ test with file watcher
         ⎕SE.Link.Watcher.(CRAWLER DOTNET)←0 1
⍝_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓
         ok∧←(⍎test)folder NAME      ⍝ ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ←
⍝¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑
     :EndIf
     :If cancrawl ⍝ test with crawler
     :AndIf ~(canwatch∧test≡'test_watcherrors')  ⍝ already done with file watcher - no need to do it with file crawler
         ⎕SE.Link.Watcher.(CRAWLER DOTNET)←1 0
⍝_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓_↓
         ok∧←(⍎test)folder NAME      ⍝ ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ←
⍝¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑¯↑
     :EndIf
 :EndFor
 time←⎕AI[3]-time
 UnSetup
      ⍝ restore ⎕SE.Link settings
 {}⎕SE.UCMD']udebug ',udebug
 ⎕SE.Link.DEBUG←olddebug
 ⎕SE.Link.U.SHOWMSG←showmsg
 ⎕SE.Link.Watcher.(DOTNET CRAWLER INTERVAL)←(canwatch cancrawl interval)
 ⎕SE.Link.USERCONFIGFILE←''

      ⍝ display results
 dnv←{0::'none' ⋄ ⎕USING←'' ⋄ System.Environment.Version.(∊⍕¨Major'.'(|MajorRevision))}''
 core←(1+⎕SE.Link.Watcher.DOTNETCORE)⊃'Framework' 'Core'
 aplv←{⍵↑⍨¯1+2⍳⍨+\'.'=⍵}2⊃'.'⎕WG'APLVersion'
 aplv,←' ',(1+82=⎕DR'')⊃'Unicode' 'Classic'
 opts←' (USE_ISOLATES: ',(⍕USE_ISOLATES),', '
 opts,←'USE_MOCK_FSW: ',(⍕USE_MOCK_FSW),')'

 oktxt←(1+ok)⊃'!!! NOT OK !!!' 'OK'
 Log z←(⍕≢tests),' test[s] passed ',oktxt,' in',(1⍕time÷1000),'s with Link ',⎕SE.Link.Version,' on Dyalog ',aplv,' and .Net',core,' ',dnv,opts
 
 :If CITA
     ⎕TRAP←0 'S'
     (⊂z) ⎕NPUT (CITA_LOG,'.ok') 1
 :EndIf
 →0

 ERROR:
   ⎕TRAP←0 'S'
   z←⎕DMX.DM
   isassert←2
   extn←'.',isassert⊃'fail' 'err'
   ⎕←'Writing file: ',file←CITA_LOG,extn
   z←(⊂z) ⎕NPUT file 1
   ok←file,' created.'
