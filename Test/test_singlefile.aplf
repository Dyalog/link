 ok←test_singlefile(folder name);source;file;z;link;bare
⍝ Test ability to use a single source file

 3 ⎕MKDIR Retry⊢folder
 ⎕EX name
 file←folder,'/linktest.apln'
 source←(':Namespace ',2↓name)'∇r←dup x' 'r←x x' '∇' ':EndNamespace'
 (⊂bare←1 0 0 0 1/source)QNPUT file

 z←LinkCreate name file ⍝ Link not to the folder, but to the file
 link←GetLink name
 assert'1=link.singlefile'
 z←(⊂source)QNPUT file
 assert'(,¨source)≡⎕SRC ',name
 z←⎕SE.Link.Break name
 3 ⎕NDELETE file

 z←'{watch:''ns''}' LinkCreate name file ⍝ Now watch the ns only
 link←GetLink name
 assert 'link.dir≡file'
 z←(⊂bare)QNPUT file                  ⍝ Write the truncated source
 assert'(,¨source)≡⎕SRC ',name        ⍝ Verify it was not updated in the ws
 (⍎name) ⎕SE.Link.Fix source          ⍝ Update the ws definition
 assert'(,¨source)≡⊃⎕NGET file 1'     ⍝ Check file WAS updated
 z←⎕SE.Link.Break name
 3 ⎕NDELETE file

 ⍝ Now try to create a class from a file
 (¯4↑file)←'aplc'
 3 ⎕NDELETE file
 #.⎕FIX source←(':Class ',2↓name)'∇r←dup x' ':Access Shared Public' 'r←x x' '∇' ':EndClass'

 z←LinkCreate name file ⍝ Link not to the folder, but to the file
 assert'(,¨source)≡⊃⎕NGET file 1' ⍝ File written correctly

 z←⎕SE.Link.Configure name 'flatten:1'
 assert '1∊''only supported for linked directories''⍷z'

 ok←1

 ⍝ Test watch=ns or =none

 ⍝ Test export, import (already works?)
 ⍝ Test add (should fail)
 ⍝ Expunge (should break the link)
 ⍝ Configuire (should refuse to do anything)
 ⍝ Test linking to a function source file
 