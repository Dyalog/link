 {names}←{where}Fix src;RSI;XSI;callback;delete;error;file;fix;fixedname;link;links;name;nc;nosrc;ns;nsname;nsref;oldfile;oldname;this;tie;update;⎕IO;⎕ML;add;parts;n;renamed;new;z;relname;sname;snc
⍝ Fix a function/operator or script, preserving any existing source files if in a linked namespace
⍝   Used internally by EditorFix "afterfix" processing
⍝   May be called by other tools providing the source in ⎕NR/⎕SRC format on the right
⍝ The left argument can have up to three elements, the last two being provided by the editor on a rename
⍝ When used as an API function, where is usually either a ref or the name of a namespace
⍝   [1] where:   the namespace to fix the source in
⍝   [2] name:    the name of the object being created
⍝   [3] oldname: the previous name
⍝ Return the list of names of objects that were fixed
⍝   NB: in a linked namespace, the source must only define a single name

 ⎕IO ⎕ML←1 1
 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     names←0⍴⊂''
     XSI←⎕XSI ⋄ RSI←⎕RSI
     :If 900⌶⍬ ⋄ where←'' ⋄ :EndIf  ⍝ fix into calling space by default

     :If 2=≢⍴src ⋄ src←{(+/∨\' '≠⌽⍵)↑¨↓⍵}src ⋄ :EndIf
     nosrc←0=≢src
     :If 9≠⎕NC'where' ⋄ where←⊆,where ⋄ :EndIf  ⍝ do not ravel reference
     (ns name oldname)←3↑where,'' '' ''
     :If 0=≢ns ⋄ ns←⊃RSI ⋄ :EndIf  ⍝ namespace not specified - do not ravel reference
     oldname,←(0=≢oldname)/name ⍝ oldname not specified
     name,←(0=≢name)/oldname ⍝ name not specified
     (sname snc)←U.Sniff''src
     :If 0=≢name ⍝ no names provided at all
         name←oldname←sname
     :EndIf
     this←⊃RSI XSI U.ContainerNs ns
     nsname←⍕nsref←this(0 U.GetRefTo)ns
     :If 0∊⍴nsref ⋄ U.Error'Not a namespace: ',ns ⋄ :EndIf

     callback←'⎕SE.Link.OnAfterFix' '⎕SE.SALTUtils.EditorFix'∊⍨⊂⊃1↓XSI  ⍝ v18.0 started using ⎕SE.Link.OnFix/⎕SE.Link.OnAfterFix - v17.1 was called directly from SALT
     add←'⎕SE.Link.Add'≡⊃1↓XSI
     ⍝ :If callback ⋄ →NOHOLD ⋄ :EndIf
     →callback/NOHOLD ⍝ Can't hold in a high-priority callback (Editor AfterFix callback) - see mantis 18160: can't :Hold 0⍴⊂'' in a high-priority callback
     :Hold '⎕SE.Link.Notify' '⎕SE.Link.Links'
     ⍝ Ok not to hold ⎕SE.Link.Links in high-priority callback because it only reads it and doesn't change it, and no other APL thread will run.
     ⍝ However not holding '⎕SE.Link.Notify' is annoying because there is a non-zero probability of the files being in an incomplete/misleading state
NOHOLD:
         links←U.GetLinks
         :If snc∊9.1 9.4 9.5         ⍝ Sniffed source looks like a linkable space
         :AndIf 9=nsref.⎕NC sname    ⍝ ... and a space by that name exists
         :AndIf 0≠≢link←links U.LookupRef nsref⍎sname ⍝ ...and is linked
         :AndIf link.singlefile      ⍝ ... this may be unnecessary paranoia
              ⍝ We are overwriting the linked space in link
         :ElseIf 0∊⍴link←links U.LookupRef ns←nsref ⍝ Is it within a normal link?
             :GoTo NOLINK
         :EndIf

         :If ~U.IsNamedRef nsref ⋄ U.Error'Not a properly named namespace: ',ns ⋄ :EndIf
         U.ErrorIfRestored links  ⍝ now that we know we're dealing with a linked namespace, allow error

         :If link.singlefile
         :AndIf (⍕where)≢⊃U.SplitNs link.ns ⍝ Target space is parent of link.ns
             U.Error'May not Fix inside a linked namespace, class or interface'
         :EndIf
         (file oldfile nc)←link(0 U.DetermineFileName)nsname name oldname src

         :If nc=¯1 ⋄ U.Error'Invalid name: ',nsname,'.',name
         :ElseIf (0=nc)∧(~nosrc) ⋄ U.Error'Invalid source for ',nsname,'.',name ⍝ ,': ',⍕src
         :ElseIf (0=nc) ⋄ U.Error'No source for ',nsname,'.',name
         :ElseIf callback∧(2.1=nc)∧~⎕NEXISTS file  ⍝ only update array if file already exists
             ¯1 U.Log'ignoring editing of array: 'nsname'.'name
             :Return
         :EndIf

         update←(⊂link.watch)∊'ns' 'both'
         :If ~update
         :AndIf '⎕SE.Link.Add'≡2⊃2↑⎕XSI
             U.Warn'Add will not update files when watch=',link.watch
         :EndIf

         tie←U.FixTie link  ⍝ should we tie files when fixing

         :If update
             renamed←(name≢oldname)∧0≠≢oldname
             new←(link.watch≡'dir')∨0=≢nsref U.CurrentFileName name  ⍝ not currently associated
         :AndIf ~link.forceFilenames
         :AndIf renamed∨new∧nc≠2.1
         :AndIf ⎕NEXISTS file          ⍝ And the target file already exists
         :AndIf (name nc)≢z←U.Sniff name file ⍝ And seems to contain something different
             U.Warn'Cannot write ',name,' to "',file,'" - that file defines ',⊃z
             parts←⎕NPARTS file ⋄ n←1
             :Repeat ⋄ n+←1 ⍝ Add ~2, ~3, ~4 ... to file name until free name found
             :Until ~⎕NEXISTS file←∊parts,¨''('~',⍕n)''
             U.Warn'Writing ',name,' to file "',file,'"'
         :EndIf


         delete←(0≠≢oldfile)∧(file≢oldfile)∧(name≡oldname)  ⍝ old file must be removed : file name was changed by beforeWrite or forceFilename or forceExtensions
         :If callback∧(0≠≢oldfile)∧(oldname≢name)  ⍝ Repair damage done by editor on rename - won't happen if oldname is undefined (link issue #190) because oldfile must then be empty
             :If (1↓U.LASTFIX)≢(⍕ns)(oldname) ⋄ U.Error'Fixing error: last fix is ',(⍕2⊃U.LASTFIX),'.',(3⊃U.LASTFIX),' instead of ',(⍕ns),'.',(oldname) ⋄ :EndIf
             ns U.Untie name  ⍝ editor ties newname to oldfile
             (⊃U.LASTFIX)(nsref U.Into)oldfile   ⍝ editor overwrites oldfile with new definition
             :If 0>ns U.QFix oldfile oldname tie 1 0 ⍝ FileSystemWatcher will pick up the change but won't fix it since it's already fixed - TODO it means it will re-hash the file
                 U.Error'Could not fix ',(⍕ns),'.',oldname,' from "',oldfile,'"'
             :EndIf
         :ElseIf callback∧(~tie)∧(0=≢oldfile)∧(oldname≢name)   ⍝ untied rename
         :AndIf (ns.⎕NC oldname)∊3 4 ⍝ workaround Mantis 18992
             :If oldname≢⊃ns U.Fix oldname(ns.⎕NR oldname)1  ⍝ repair damage done by editor - 0 ⎕ATX may hold an incorrect version, compared to ⎕NR
                 U.Error'Could not fix ',(⍕ns),'.',oldname
             :EndIf
         :ElseIf callback∧(0=≢oldfile)∧(oldname≡name)  ⍝ new name - link issue #196 v18.0 needs to preserve source as typed
             :If (1↓U.LASTFIX)≢(⍕ns)(oldname) ⋄ U.Error'Fixing error: last fix is ',(⍕2⊃U.LASTFIX),'.',(3⊃U.LASTFIX),' instead of ',(⍕ns),'.',(oldname) ⋄ :EndIf
             :If 2=ns.⎕NC name ⋄ src←ns U.GetAplSource name link ⍝ source of array
             ⍝:ElseIf ~tie ⋄ :AndIf (ns.⎕NC name)∊3 4 ⍝ functions not tied to file cannot preserve whitespace - Link.Diff would otherwise report a diff between file and namespace
             ⍝    src←ns.⎕NR name    ⍝ use ⎕NR so that workspace matches file
             :Else ⋄ src←⊃U.LASTFIX  ⍝ source as typed
             :EndIf
             nosrc←0
         :Else
         :EndIf

         :If callback   ⍝ called back from editor
             U.LASTFIX←⍬  ⍝ last fix event consumed
             :If ~update ⍝ Editor fix when not watching the namespace
                 :Return  ⍝ job done
             :EndIf
         :EndIf

         :If 1∊⊃ns.⎕STATE name ⍝ Is name localised on stack?
             U.Warn'Ignoring edit of localised name ',nsname,'.',name
             :Return
         :EndIf

         :If nosrc    ⍝ Source not provided - find it
             :If 1=≡src←ns U.GetAplSource name link ⍝ string source means error
                 U.Error src  ⍝ failed to get source
             :ElseIf nc=2.1  ⍝ link issue #205 - check round-trip of serialisation
             :AndIf {link.text≡'aplan': 1 ⋄ ''≡U.SubExt ns⍎name}⍬ ⍝ APLAN
             :AndIf (ns⍎name){0::1 ⋄ ⎕CT←0 ⋄ ⍺≢⎕SE.Dyalog.Array.Deserialise ⍵}src
                 U.Error'Cannot round-trip serialisation of array: ',nsname,'.',name
             :EndIf
         :EndIf

         :If 3=link.(⎕NC beforeWrite)  ⍝ user callback on file write
             file←'\.(\w+\.)?apla$'⎕R'.apla'⊢file ⍝ remove any sub-extension
             :If ~(⍎link.beforeWrite)'beforeWrite'link file(nsname,'.',name)(|nc)(nsname,'.',oldname)src
                 ¯1 U.Log'name='nsname'.'name' file="'file'" handled by user'
                 :Return
             :EndIf
         :EndIf

         :If nc≠¯9.1 ⋄ :AndIf U.HasNewlines∊src
             U.Error'Source code cannot have newlines'
         :EndIf

         fix←~nosrc ⍝ no need to update if source was read from APL
         fix∧←~callback ⍝ no need to refix if change was done through editor (in which case src was empty anyways)
         ¯1 U.Log'name='nsname'.'name' file="'file'" fix='(⍕fix)' update='(⍕update)' tie='(⍕tie)' oldname='oldname' delete='(⍕delete)' oldfile="'oldfile'"'

         error←''
         :If update  ⍝ file system must reflect changes - FileWatcher may pick it up after this high-priority callback, and should notice no change in source, therefore not fix it  - TODO it means it will re-hash the file
             :Trap 0
                 :If nc=¯9.1  ⍝ tradns → folder
                     3 ⎕MKDIR file
                 :Else  ⍝ file
                     3 ⎕MKDIR 1⊃⎕NPARTS file ⍝ make sure folder is there
                     src(nsref U.Into)name nsref.{3 4∊⍨⎕NC ⍺:⍵(2 ⎕AT ⍺) ⋄ ⍵}file
                     :If NOTIFY∧callback∧link.watch≡'ns'
                         ⍝ If watching files, notification happens on FSW event
                         U.Notify nsname,'.',name,' written to ',file
                     :EndIf
                 :EndIf
             :Else  ⍝ do not error yet - we still want to attempt to fix the source in the workspace
                 error←'Unable to write ',nsname,'.',name,' to file: ',file
             :EndTrap
             :If delete  ⍝ old file must be removed
                 1 ⎕NDELETE oldfile
             :ElseIf 2.1=nc  ⍝ might have changed format
                 1 ⎕NDELETE(⊃⎕NINFO⍠1⊢'\.(\w+\.)?apla$'⎕R'.*apla'⊢file)~⊂file  ⍝ delete all other possible source files
             :EndIf
         :EndIf

         :If fix
             :If (0∊⍴error)∧(update∧tie) ⋄ src←file ⋄ :EndIf  ⍝ unless there was an error updating the file
             (fixedname nc)←ns U.Fix name src 1   ⍝ do not call QFix because file may be out-of-sync
             :If nc∊¯1 0
                 U.Error'Unable to fix ',nsname,'.',name,' from source: ',⍕src
             :EndIf
             names←,⊂fixedname
         :Else
             names←,⊂name
         :EndIf

         relname←(1+≢link.ns)↓nsname,'.',name
         relname Config.RestoreFlags link

         :If ~0∊⍴error ⋄ U.Error error ⋄ :EndIf

     :EndHold ⍝ Links
     :Return

NOLINK:
     :If ~callback  ⍝ leave editor alone if not linked
     :AndIf ~add    ⍝ Link.Add fixes only in linked namespaces
         names←,⊂⊃nsref U.Fix name src 1
     :EndIf

 :Else
     U.Resignal 1
 :EndTrap
