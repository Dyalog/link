 status←{opts}Status ns;L;defopts;dirs;infos;items;lineages;links;nss;prop;props;ref;where;⎕IO;⎕ML
 ⎕IO ⎕ML←1 1
 :If U.debug=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     :Hold '⎕SE.Link.Links'
         :If 0∊⍴links←U.GetLinks ⋄ status←'No active links' ⋄ :Return ⋄ :EndIf

         :If ×≢ns
             where←1⊃⎕RSI ⎕XSI U.ContainerNs ⍬         ⍝ ref to container
             :If ~0∊⍴ref←where(0 U.GetRefTo)ns
                 links←links U.LookupLinks ref  ⍝ links that are children of ns
             :Else
                 U.Error'Not a linked namespace: ',,⍕ns
             :EndIf
         :EndIf
         :If 0=≢links
             status←'No active links in ',⍕ns
             :Return
         :EndIf
         ⍝ items←+/¨~3⊃¨U.GetFileTiesIn¨nss    ⍝ tied files (not script items, nor arrays)
         ⍝ items+←¯1+≢¨dirs←U.ListNamespaces¨⍎¨nss  ⍝ directories (excluding self)
         ⍝ status,←items
         status←↑links.(ns watch dir)
         status,←≢¨⊃¨links(0 U.ListFiles 0)¨status[;3]  ⍝ exclude root
         status[;2]←U.Arrows¨links.watch
         status⍪⍨←'Namespace' '' 'Directory' 'Files'

         (defopts←⎕NS ⍬).(extended)←0
         opts←defopts U.DefaultOpts⍎⎕NS∘⍬⍣(900⌶⍬)⊢'opts'
         :If ~opts.extended∊0 1 ⋄ U.Error'Invalid value ',(⍕opts.extended),' for modifier "extended" - must be one of: 0 1' ⋄ :EndIf

         props←('Case' 'Code')'Flatten'('Force' 'Extensions')('Force' 'Filenames')'Watch'
         :If (opts.extended)
             :If ×≢links
                 :For prop :In props
                     status,←(⊂↑prop),links⍎¨⊂0 U.CaseText@1∊prop
                 :EndFor
             :Else
                 status,←,[0.5]↑¨props
             :EndIf
             status,←(⊂'Paused'),Watcher.Paused¨links
         :EndIf
     :EndHold
     :If 0≠≢links
     :AndIf ∨/links.restored
         status,⍨←(⊂'Comments'),'' 'Link.Resync required'[1+links.restored]
     :EndIf
 :Else
     U.Resignal 1
 :EndTrap
