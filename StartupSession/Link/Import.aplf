 msg←{opts}Import args;ns;src;defopts;dir;failed;files;fixed;nsref;rawns;single;⎕IO;⎕ML;setconfig;container;dir;nsgiven;nsexisted
 ⎕IO ⎕ML←1 1
 preProcessOpts
 (container ns src nsgiven)←preProcessNsDir args
 (msg setconfig)←src Config.GetConfig opts ⍝ Read Config in imported folder or user config
 →(0≠≢msg)⍴0

 :If 2=DEBUG←{6::0 ⋄ ⍵.Debug.debug}setconfig
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap DEBUG↓0
     U.ErrorIfRestored U.GetLinks ⍝ never allow import - should ideally forbid it ONLY into linked namespaces

     (defopts←⎕NS ⍬).(overwrite)←0
     opts←opts Config.MergeOpts setconfig ⍝ Merge configured options in
     opts←defopts U.DefaultOpts opts
     :If ~opts.overwrite∊0 1 ⋄ U.Error'Invalid value ',(⍕opts.overwrite),' for modifier "overwrite" - must be one of: 0 1' ⋄ :EndIf
     opts.watch←'none'  ⍝ prevent tying to the files
     opts.source←'dir'

     files←opts U.FindFile src  ⍝ candidates for source file
     nsexisted←0≠⎕NC ns
     :If 0=≢files
         U.Error'Source not found: ',src
     :ElseIf 1<≢files
         U.Error'More than one source found for ',src,': ',U.FmtLines files
     :ElseIf 0=≢nsref←(1 U.GetRefTo)ns ⍝ must be normal namespace
         :If ¯1=U.NameClass ns  ⍝ either invalid name or ref to unnamed namespace
             U.Error'Not a properly named namespace: ',,⍕ns
         :Else
             U.Error'Not a namespace: ',ns
         :EndIf
     :ElseIf ~U.IsNamedRef nsref  ⍝ ns is name of unnamed namespace
         U.Error'Not a properly named namespace: ',ns
     :ElseIf U.Slash⊃⌽src
         U.Error'Trailing slash reserved for future extension'
     :Else
         src←⊃files
         opts.ns←ns←U.NormNs ns
         :If single←2=1 ⎕NINFO src     ⍝ Importing a single object from a single file
             dir←¯1↓⊃⎕NPARTS src←0 U.NormFile src
             opts.dir←dir
             :If ~nsgiven
                 :If ~nsexisted
                     ⎕EX ns ⍝ Was created by GetRefTo
                 :EndIf
                 opts.ns←ns←⍕nsref←container ⍝ We import into the container
             :EndIf
         :Else                         ⍝ A directory to a namespace
             opts.dir←dir←src←0 U.NormDir src
         :EndIf
         opts.singlefile←single

         (fixed failed)←opts U.FixFiles nsref src opts.overwrite

         :If ~single
             msg←⊂'Imported: ',ns,' ← ',U.WinSlash dir
             :If ×≢failed ⋄ msg,←(⊂'ERRORS ENCOUNTERED: ',(⍕≢failed),' import(s) failed:'),U.WinSlash¨failed ⋄ :EndIf
         :ElseIf ×≢failed ⋄ msg←⊂'ERRORS ENCOUNTERED: Import failed: ',⊃U.WinSlash failed
         :Else ⋄ msg←⊂'Imported: ',(⊃fixed),' ← ',U.WinSlash src
         :EndIf
         msg←1↓U.FmtLines msg
     :EndIf

     :If ⎕WSID≡'CLEAR WS'
     :AndIf #=nsref
         ⎕WSID←⎕SE.Link.U.(WinSlash Enslash)opts.dir
     :EndIf
 :Else
     U.Resignal 1
 :EndTrap
